{"version":3,"sources":["components/Note.js","components/Notification.js","components/LoginForm.js","components/NoteForm.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","defaultProps","LoginForm","username","password","handleUsernameChange","handlePasswordChange","handleLogin","onSubmit","type","value","name","onChange","target","NoteForm","newNote","handleNoteChange","addNote","token","newToken","axios","get","then","resp","data","newObject","config","headers","authorization","post","id","put","credentials","a","async","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","useEffect","noteService","allNotes","notesToShow","filter","event","console","log","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","text","loginService","window","localStorage","setItem","JSON","stringify","setTimeout","map","key","find","n","changedNote","changedNoteFromServer","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3634d784.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important';\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n\n    if (message === null) return null;\n    // else\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    message: PropTypes.string,\n};\n\nNotification.defaultProps = {\n    message: null,\n}\n\nexport default Notification;\n","import React from 'react'\n\nconst LoginForm = ({ username, password, handleUsernameChange, handlePasswordChange, handleLogin }) => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => handleUsernameChange(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"text\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => handlePasswordChange(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\nexport default LoginForm\n","import React from 'react'\n\nconst NoteForm = ({ newNote, handleNoteChange, addNote }) => (\n  <form onSubmit={addNote}>\n    <input\n      value={newNote}\n      onChange={handleNoteChange}\n    />\n    <button type=\"submit\">save</button>\n  </form>\n)\n\nexport default NoteForm\n","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/notes'\n// const baseUrl = 'https://ancient-ocean-58745.herokuapp.com/notes'\nconst baseUrl = '/api/notes'\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  return axios\n  .get(baseUrl)\n  .then(resp => resp.data)\n}\n\nconst create = newObject => {\n  const config = {\n    headers: { authorization: token },\n  };\n\n  return axios\n  .post(baseUrl, newObject, config)\n  .then(resp => resp.data)\n}\n\nconst update = (id, newObject) => {\n  return axios\n  .put(`${baseUrl}/${id}`, newObject)\n  .then(resp => resp.data)\n}\n\nexport default {\n  setToken,\n  getAll,\n  create,\n  update\n}\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const resp = await axios.post(baseUrl, credentials);\n  return resp.data;\n}\n\nexport default { login }\n","import React, { useEffect, useState } from 'react'\n\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm';\nimport NoteForm from './components/NoteForm';\nimport noteService from './services/notes';\nimport loginService from './services/login';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n    <br />\n    <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then((allNotes) => {\n      setNotes(allNotes);\n    });\n  }, []) // <-- '[]' so effect is run only after 1st render\n\n  const toggleImportanceOf = id => {\n    console.log('importance of ', id, ' needs to be toggled');\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n    .update(id, changedNote)\n    .then(changedNoteFromServer => {\n      setNotes(notes\n        .map(note => note.id !== id ? note : changedNoteFromServer)\n      )\n    })\n    .catch(() => {\n      setErrorMessage(`Note '${changedNote.content}' already deleted from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(note => note.id !== id)); // remove note with id = id\n    })\n\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important) // only show important ones\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n    noteService\n    .create(noteObject)\n    .then(createdNote => {\n      setNotes(notes.concat(createdNote))\n      setNewNote('')\n    });\n  }\n\n  const handleUsernameChange = (text) => {\n    setUsername(text);\n  }\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      );\n      noteService.setToken(user.token);\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong creds')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <h2>Login</h2>\n\n      {!user\n        ? <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={handleUsernameChange} handlePasswordChange={handlePasswordChange}\n            handleLogin={handleLogin}\n          />\n        :\n        <div>\n          <p>{user.name} logged in</p>\n          <NoteForm\n            newNote={newNote}\n            handleNoteChange={handleNoteChange}\n            addNote={addNote}\n          />\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}